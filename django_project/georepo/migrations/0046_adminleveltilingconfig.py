# Generated by Django 4.0.7 on 2023-01-04 08:01

from django.db import migrations, models
import django.db.models.deletion

MAPPING_LEVEL = {
    0: ['Country'],
    1: ['Province', 'Region', 'City', 'Oblast'],
    2: ['Raion', 'District'],
    3: ['Municipality', 'Hromada'],
    4: ['Settlement'],
}


def init_tiling_configs(apps, schema_editor):
    Dataset = apps.get_model('georepo', 'Dataset')
    AdminLevelTilingConfig = apps.get_model('georepo', 'AdminLevelTilingConfig')
    dataset_list = Dataset.objects.all()
    for dataset in dataset_list:
        tiling_configs = dataset.datasettilingconfig_set.all()
        for config in tiling_configs:
            entitytype_configs = config.entitytypetilingconfig_set.all()
            admin_levels = []
            for entitytype_config in entitytype_configs:
                label = entitytype_config.entity_type.label
                map_level = [level for level, types in MAPPING_LEVEL.items() if label in types]
                if len(map_level) > 0:
                    level = map_level[0]
                    if level not in admin_levels:
                        AdminLevelTilingConfig.objects.create(
                            level=level,
                            dataset_tiling_config=config,
                            simplify_tolerance=entitytype_config.simplify_tolerance
                        )
                        admin_levels.append(level)
                else:
                    print(f'Type not found {label} in dataset {dataset.id} - {dataset.label} at zoom {config.zoom_level}')
                    print(f'Simplify tolerance {entitytype_config.simplify_tolerance}')


class Migration(migrations.Migration):

    dependencies = [
        ('georepo', '0045_merge_20221219_0634'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminLevelTilingConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=0)),
                ('simplify_tolerance', models.FloatField(default=0)),
                ('dataset_tiling_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='georepo.datasettilingconfig')),
            ],
        ),
        migrations.RunPython(init_tiling_configs),
    ]
