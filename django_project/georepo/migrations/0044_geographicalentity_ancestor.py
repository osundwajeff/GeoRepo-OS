# Generated by Django 4.0.7 on 2022-12-14 07:14

from django.db import migrations, models
from django.db.models import Q
import django.db.models.deletion


def get_all_children(GeographicalEntity, max_level, entity):
    parent_id_key = 'id'
    ancestor_filters = Q(**{parent_id_key: entity.id})
    for i in range(max_level):
        parent_id_key = 'parent__' + parent_id_key
        ancestor_filters |= Q(**{parent_id_key: entity.id})
    return GeographicalEntity.objects.filter(
        ancestor_filters,
    )


def init_entity_ancestor(apps, schema_editor):
    GeographicalEntity = apps.get_model('georepo', 'GeographicalEntity')
    level0_entities = GeographicalEntity.objects.filter(
        parent__isnull=True
    )
    max_level: int = 0
    max_level_entity = GeographicalEntity.objects.all().order_by(
        'level').last()
    if max_level_entity:
        max_level = max_level_entity.level
    for entity in level0_entities:
        # find all children
        all_children = get_all_children(GeographicalEntity, max_level, entity)
        all_children.exclude(id=entity.id).update(
            ancestor=entity
        )


class Migration(migrations.Migration):

    dependencies = [
        ('georepo', '0043_remove_geographicalentity_simplified_geometry'),
    ]

    operations = [
        migrations.AddField(
            model_name='geographicalentity',
            name='ancestor',
            field=models.ForeignKey(blank=True, help_text='Parent Level 0', null=True, on_delete=django.db.models.deletion.CASCADE, to='georepo.geographicalentity'),
        ),
        migrations.RunPython(init_entity_ancestor),
    ]
